parameters:
  - name: tf_creds
  - name: tf_workspace
  - name: environment

stages:
  - stage: terraform_plan
    displayName: Terraform Plan
    jobs:
      - job: terraform_plan
        displayName: Terraform Plan
        workspace:
          clean: all
        steps:
          - task: DownloadSecureFile@1
            name: tf_creds
            inputs:
              secureFile: ${{ parameters.tf_creds }}

          - bash: |
              mkdir -p ~/.terraform.d
            displayName: Setup Creds Dest

          - task: CopyFiles@2
            inputs:
              sourceFolder: $(Agent.TempDirectory)
              contents: ${{ parameters.tf_creds }}
              targetFolder: "~/.terraform.d"

          - task: replacetokens@5
            displayName: Replace Tokens
            inputs:
              targetFiles: |
                $(System.DefaultWorkingDirectory)/terraform/main.tf

          - script: |
              head $(System.DefaultWorkingDirectory)/terraform/main.tf

          - task: Bash@3
            displayName: terraform init
            inputs:
              targetType: filePath
              filePath: scripts/terraform_init.sh
              workingDirectory: $(System.DefaultWorkingDirectory)/terraform
            env:
              TF_IN_AUTOMATION: true
              TF_WORKSPACE: ${{ parameters.tf_workspace }}

          - task: Bash@3
            displayName: terraform plan
            name: plan # needed for result later
            inputs:
              targetType: filePath
              filePath: scripts/terraform_plan.sh
              workingDirectory: $(System.DefaultWorkingDirectory)/terraform
              arguments: >
                -var 'admin_group_object_ids=["$(aks_admin_oid)"]'
                -out tfplan.tfout
            env:
              TF_IN_AUTOMATION: true
              TF_WORKSPACE: ${{ parameters.tf_workspace }}

          - task: CopyFiles@2
            displayName: stage files to $(Build.StagingDirectory)
            condition: and(succeeded(), eq(variables['plan.result'], 'changed'))
            inputs:
              sourceFolder: $(System.DefaultWorkingDirectory)
              contents: |
                terraform/**/*
                modules/**/*
                scripts/**/*
                !pipelines/**/*
                !.gitignore
                !**/.git/**/*
                !terraform/.terraform/**/*
                !images/**/*
                !visio/**/*
                !README.md
                !LICENSE.md
                !CONTRIBUTING.md
                !CHANGELOG.md
              targetFolder: $(Build.StagingDirectory)
              cleanTargetFolder: true

          - task: PublishBuildArtifacts@1
            displayName: upload tf artifact
            condition: and(succeeded(), eq(variables['plan.result'], 'changed'))
            inputs:
              artifactName: terraform-plan
